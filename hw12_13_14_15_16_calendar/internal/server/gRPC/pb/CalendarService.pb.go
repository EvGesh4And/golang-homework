// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: api/CalendarService.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Event         *Event                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	mi := &file_api_CalendarService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_CalendarService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_api_CalendarService_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateEventRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	TimeBefore    int64                  `protobuf:"varint,7,opt,name=time_before,json=timeBefore,proto3" json:"time_before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_api_CalendarService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_CalendarService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_CalendarService_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Event) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Event) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Event) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Event) GetTimeBefore() int64 {
	if x != nil {
		return x.TimeBefore
	}
	return 0
}

type UpdateEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Event         *Event                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventRequest) Reset() {
	*x = UpdateEventRequest{}
	mi := &file_api_CalendarService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventRequest) ProtoMessage() {}

func (x *UpdateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_CalendarService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventRequest.ProtoReflect.Descriptor instead.
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return file_api_CalendarService_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEventRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type DeleteEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventRequest) Reset() {
	*x = DeleteEventRequest{}
	mi := &file_api_CalendarService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventRequest) ProtoMessage() {}

func (x *DeleteEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_CalendarService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return file_api_CalendarService_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEventsDayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsDayRequest) Reset() {
	*x = GetEventsDayRequest{}
	mi := &file_api_CalendarService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsDayRequest) ProtoMessage() {}

func (x *GetEventsDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_CalendarService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsDayRequest.ProtoReflect.Descriptor instead.
func (*GetEventsDayRequest) Descriptor() ([]byte, []int) {
	return file_api_CalendarService_proto_rawDescGZIP(), []int{4}
}

func (x *GetEventsDayRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

type GetEventsDayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsDayResponse) Reset() {
	*x = GetEventsDayResponse{}
	mi := &file_api_CalendarService_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsDayResponse) ProtoMessage() {}

func (x *GetEventsDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_CalendarService_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsDayResponse.ProtoReflect.Descriptor instead.
func (*GetEventsDayResponse) Descriptor() ([]byte, []int) {
	return file_api_CalendarService_proto_rawDescGZIP(), []int{5}
}

func (x *GetEventsDayResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetEventsWeekRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsWeekRequest) Reset() {
	*x = GetEventsWeekRequest{}
	mi := &file_api_CalendarService_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsWeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsWeekRequest) ProtoMessage() {}

func (x *GetEventsWeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_CalendarService_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsWeekRequest.ProtoReflect.Descriptor instead.
func (*GetEventsWeekRequest) Descriptor() ([]byte, []int) {
	return file_api_CalendarService_proto_rawDescGZIP(), []int{6}
}

func (x *GetEventsWeekRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

type GetEventsWeekResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsWeekResponse) Reset() {
	*x = GetEventsWeekResponse{}
	mi := &file_api_CalendarService_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsWeekResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsWeekResponse) ProtoMessage() {}

func (x *GetEventsWeekResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_CalendarService_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsWeekResponse.ProtoReflect.Descriptor instead.
func (*GetEventsWeekResponse) Descriptor() ([]byte, []int) {
	return file_api_CalendarService_proto_rawDescGZIP(), []int{7}
}

func (x *GetEventsWeekResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetEventsMonthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsMonthRequest) Reset() {
	*x = GetEventsMonthRequest{}
	mi := &file_api_CalendarService_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsMonthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsMonthRequest) ProtoMessage() {}

func (x *GetEventsMonthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_CalendarService_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsMonthRequest.ProtoReflect.Descriptor instead.
func (*GetEventsMonthRequest) Descriptor() ([]byte, []int) {
	return file_api_CalendarService_proto_rawDescGZIP(), []int{8}
}

func (x *GetEventsMonthRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

type GetEventsMonthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsMonthResponse) Reset() {
	*x = GetEventsMonthResponse{}
	mi := &file_api_CalendarService_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsMonthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsMonthResponse) ProtoMessage() {}

func (x *GetEventsMonthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_CalendarService_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsMonthResponse.ProtoReflect.Descriptor instead.
func (*GetEventsMonthResponse) Descriptor() ([]byte, []int) {
	return file_api_CalendarService_proto_rawDescGZIP(), []int{9}
}

func (x *GetEventsMonthResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_api_CalendarService_proto protoreflect.FileDescriptor

const file_api_CalendarService_proto_rawDesc = "" +
	"\n" +
	"\x19api/CalendarService.proto\x12\bcalendar\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"K\n" +
	"\x12CreateEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x05event\x18\x02 \x01(\v2\x0f.calendar.EventR\x05event\"\xfb\x01\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x1f\n" +
	"\vtime_before\x18\a \x01(\x03R\n" +
	"timeBefore\"K\n" +
	"\x12UpdateEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x05event\x18\x02 \x01(\v2\x0f.calendar.EventR\x05event\"$\n" +
	"\x12DeleteEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"G\n" +
	"\x13GetEventsDayRequest\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\"?\n" +
	"\x14GetEventsDayResponse\x12'\n" +
	"\x06events\x18\x01 \x03(\v2\x0f.calendar.EventR\x06events\"H\n" +
	"\x14GetEventsWeekRequest\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\"@\n" +
	"\x15GetEventsWeekResponse\x12'\n" +
	"\x06events\x18\x01 \x03(\v2\x0f.calendar.EventR\x06events\"I\n" +
	"\x15GetEventsMonthRequest\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\"A\n" +
	"\x16GetEventsMonthResponse\x12'\n" +
	"\x06events\x18\x01 \x03(\v2\x0f.calendar.EventR\x06events2\xdb\x03\n" +
	"\bCalendar\x12E\n" +
	"\vCreateEvent\x12\x1c.calendar.CreateEventRequest\x1a\x16.google.protobuf.Empty\"\x00\x12E\n" +
	"\vUpdateEvent\x12\x1c.calendar.UpdateEventRequest\x1a\x16.google.protobuf.Empty\"\x00\x12E\n" +
	"\vDeleteEvent\x12\x1c.calendar.DeleteEventRequest\x1a\x16.google.protobuf.Empty\"\x00\x12O\n" +
	"\fGetEventsDay\x12\x1d.calendar.GetEventsDayRequest\x1a\x1e.calendar.GetEventsDayResponse\"\x00\x12R\n" +
	"\rGetEventsWeek\x12\x1e.calendar.GetEventsWeekRequest\x1a\x1f.calendar.GetEventsWeekResponse\"\x00\x12U\n" +
	"\x0eGetEventsMonth\x12\x1f.calendar.GetEventsMonthRequest\x1a .calendar.GetEventsMonthResponse\"\x00B\aZ\x05./;pbb\x06proto3"

var (
	file_api_CalendarService_proto_rawDescOnce sync.Once
	file_api_CalendarService_proto_rawDescData []byte
)

func file_api_CalendarService_proto_rawDescGZIP() []byte {
	file_api_CalendarService_proto_rawDescOnce.Do(func() {
		file_api_CalendarService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_CalendarService_proto_rawDesc), len(file_api_CalendarService_proto_rawDesc)))
	})
	return file_api_CalendarService_proto_rawDescData
}

var file_api_CalendarService_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_CalendarService_proto_goTypes = []any{
	(*CreateEventRequest)(nil),     // 0: calendar.CreateEventRequest
	(*Event)(nil),                  // 1: calendar.Event
	(*UpdateEventRequest)(nil),     // 2: calendar.UpdateEventRequest
	(*DeleteEventRequest)(nil),     // 3: calendar.DeleteEventRequest
	(*GetEventsDayRequest)(nil),    // 4: calendar.GetEventsDayRequest
	(*GetEventsDayResponse)(nil),   // 5: calendar.GetEventsDayResponse
	(*GetEventsWeekRequest)(nil),   // 6: calendar.GetEventsWeekRequest
	(*GetEventsWeekResponse)(nil),  // 7: calendar.GetEventsWeekResponse
	(*GetEventsMonthRequest)(nil),  // 8: calendar.GetEventsMonthRequest
	(*GetEventsMonthResponse)(nil), // 9: calendar.GetEventsMonthResponse
	(*timestamppb.Timestamp)(nil),  // 10: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),          // 11: google.protobuf.Empty
}
var file_api_CalendarService_proto_depIdxs = []int32{
	1,  // 0: calendar.CreateEventRequest.event:type_name -> calendar.Event
	10, // 1: calendar.Event.start_time:type_name -> google.protobuf.Timestamp
	10, // 2: calendar.Event.end_time:type_name -> google.protobuf.Timestamp
	1,  // 3: calendar.UpdateEventRequest.event:type_name -> calendar.Event
	10, // 4: calendar.GetEventsDayRequest.start:type_name -> google.protobuf.Timestamp
	1,  // 5: calendar.GetEventsDayResponse.events:type_name -> calendar.Event
	10, // 6: calendar.GetEventsWeekRequest.start:type_name -> google.protobuf.Timestamp
	1,  // 7: calendar.GetEventsWeekResponse.events:type_name -> calendar.Event
	10, // 8: calendar.GetEventsMonthRequest.start:type_name -> google.protobuf.Timestamp
	1,  // 9: calendar.GetEventsMonthResponse.events:type_name -> calendar.Event
	0,  // 10: calendar.Calendar.CreateEvent:input_type -> calendar.CreateEventRequest
	2,  // 11: calendar.Calendar.UpdateEvent:input_type -> calendar.UpdateEventRequest
	3,  // 12: calendar.Calendar.DeleteEvent:input_type -> calendar.DeleteEventRequest
	4,  // 13: calendar.Calendar.GetEventsDay:input_type -> calendar.GetEventsDayRequest
	6,  // 14: calendar.Calendar.GetEventsWeek:input_type -> calendar.GetEventsWeekRequest
	8,  // 15: calendar.Calendar.GetEventsMonth:input_type -> calendar.GetEventsMonthRequest
	11, // 16: calendar.Calendar.CreateEvent:output_type -> google.protobuf.Empty
	11, // 17: calendar.Calendar.UpdateEvent:output_type -> google.protobuf.Empty
	11, // 18: calendar.Calendar.DeleteEvent:output_type -> google.protobuf.Empty
	5,  // 19: calendar.Calendar.GetEventsDay:output_type -> calendar.GetEventsDayResponse
	7,  // 20: calendar.Calendar.GetEventsWeek:output_type -> calendar.GetEventsWeekResponse
	9,  // 21: calendar.Calendar.GetEventsMonth:output_type -> calendar.GetEventsMonthResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_CalendarService_proto_init() }
func file_api_CalendarService_proto_init() {
	if File_api_CalendarService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_CalendarService_proto_rawDesc), len(file_api_CalendarService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_CalendarService_proto_goTypes,
		DependencyIndexes: file_api_CalendarService_proto_depIdxs,
		MessageInfos:      file_api_CalendarService_proto_msgTypes,
	}.Build()
	File_api_CalendarService_proto = out.File
	file_api_CalendarService_proto_goTypes = nil
	file_api_CalendarService_proto_depIdxs = nil
}
