// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: CalendarService.proto

package pb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateEventReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventReq) Reset() {
	*x = CreateEventReq{}
	mi := &file_CalendarService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventReq) ProtoMessage() {}

func (x *CreateEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_CalendarService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventReq.ProtoReflect.Descriptor instead.
func (*CreateEventReq) Descriptor() ([]byte, []int) {
	return file_CalendarService_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEventReq) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	TimeBefore    int64                  `protobuf:"varint,7,opt,name=time_before,json=timeBefore,proto3" json:"time_before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_CalendarService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_CalendarService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_CalendarService_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Event) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Event) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Event) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Event) GetTimeBefore() int64 {
	if x != nil {
		return x.TimeBefore
	}
	return 0
}

type UpdateEventReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Event         *Event                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventReq) Reset() {
	*x = UpdateEventReq{}
	mi := &file_CalendarService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventReq) ProtoMessage() {}

func (x *UpdateEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_CalendarService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventReq.ProtoReflect.Descriptor instead.
func (*UpdateEventReq) Descriptor() ([]byte, []int) {
	return file_CalendarService_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateEventReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEventReq) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type DeleteEventReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventReq) Reset() {
	*x = DeleteEventReq{}
	mi := &file_CalendarService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventReq) ProtoMessage() {}

func (x *DeleteEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_CalendarService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventReq.ProtoReflect.Descriptor instead.
func (*DeleteEventReq) Descriptor() ([]byte, []int) {
	return file_CalendarService_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteEventReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEventsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsReq) Reset() {
	*x = GetEventsReq{}
	mi := &file_CalendarService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsReq) ProtoMessage() {}

func (x *GetEventsReq) ProtoReflect() protoreflect.Message {
	mi := &file_CalendarService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsReq.ProtoReflect.Descriptor instead.
func (*GetEventsReq) Descriptor() ([]byte, []int) {
	return file_CalendarService_proto_rawDescGZIP(), []int{4}
}

func (x *GetEventsReq) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

type GetEventsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsResp) Reset() {
	*x = GetEventsResp{}
	mi := &file_CalendarService_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsResp) ProtoMessage() {}

func (x *GetEventsResp) ProtoReflect() protoreflect.Message {
	mi := &file_CalendarService_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsResp.ProtoReflect.Descriptor instead.
func (*GetEventsResp) Descriptor() ([]byte, []int) {
	return file_CalendarService_proto_rawDescGZIP(), []int{5}
}

func (x *GetEventsResp) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_CalendarService_proto protoreflect.FileDescriptor

const file_CalendarService_proto_rawDesc = "" +
	"\n" +
	"\x15CalendarService.proto\x12\bcalendar\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"7\n" +
	"\x0eCreateEventReq\x12%\n" +
	"\x05event\x18\x01 \x01(\v2\x0f.calendar.EventR\x05event\"\xfb\x01\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x1f\n" +
	"\vtime_before\x18\a \x01(\x03R\n" +
	"timeBefore\"G\n" +
	"\x0eUpdateEventReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x05event\x18\x02 \x01(\v2\x0f.calendar.EventR\x05event\" \n" +
	"\x0eDeleteEventReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"@\n" +
	"\fGetEventsReq\x120\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\"8\n" +
	"\rGetEventsResp\x12'\n" +
	"\x06events\x18\x01 \x03(\v2\x0f.calendar.EventR\x06events2\x9f\x03\n" +
	"\bCalendar\x12A\n" +
	"\vCreateEvent\x12\x18.calendar.CreateEventReq\x1a\x16.google.protobuf.Empty\"\x00\x12A\n" +
	"\vUpdateEvent\x12\x18.calendar.UpdateEventReq\x1a\x16.google.protobuf.Empty\"\x00\x12A\n" +
	"\vDeleteEvent\x12\x18.calendar.DeleteEventReq\x1a\x16.google.protobuf.Empty\"\x00\x12A\n" +
	"\fGetEventsDay\x12\x16.calendar.GetEventsReq\x1a\x17.calendar.GetEventsResp\"\x00\x12B\n" +
	"\rGetEventsWeek\x12\x16.calendar.GetEventsReq\x1a\x17.calendar.GetEventsResp\"\x00\x12C\n" +
	"\x0eGetEventsMonth\x12\x16.calendar.GetEventsReq\x1a\x17.calendar.GetEventsResp\"\x00B\aZ\x05./;pbb\x06proto3"

var (
	file_CalendarService_proto_rawDescOnce sync.Once
	file_CalendarService_proto_rawDescData []byte
)

func file_CalendarService_proto_rawDescGZIP() []byte {
	file_CalendarService_proto_rawDescOnce.Do(func() {
		file_CalendarService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_CalendarService_proto_rawDesc), len(file_CalendarService_proto_rawDesc)))
	})
	return file_CalendarService_proto_rawDescData
}

var file_CalendarService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_CalendarService_proto_goTypes = []any{
	(*CreateEventReq)(nil),        // 0: calendar.CreateEventReq
	(*Event)(nil),                 // 1: calendar.Event
	(*UpdateEventReq)(nil),        // 2: calendar.UpdateEventReq
	(*DeleteEventReq)(nil),        // 3: calendar.DeleteEventReq
	(*GetEventsReq)(nil),          // 4: calendar.GetEventsReq
	(*GetEventsResp)(nil),         // 5: calendar.GetEventsResp
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 7: google.protobuf.Empty
}
var file_CalendarService_proto_depIdxs = []int32{
	1,  // 0: calendar.CreateEventReq.event:type_name -> calendar.Event
	6,  // 1: calendar.Event.start_time:type_name -> google.protobuf.Timestamp
	6,  // 2: calendar.Event.end_time:type_name -> google.protobuf.Timestamp
	1,  // 3: calendar.UpdateEventReq.event:type_name -> calendar.Event
	6,  // 4: calendar.GetEventsReq.start:type_name -> google.protobuf.Timestamp
	1,  // 5: calendar.GetEventsResp.events:type_name -> calendar.Event
	0,  // 6: calendar.Calendar.CreateEvent:input_type -> calendar.CreateEventReq
	2,  // 7: calendar.Calendar.UpdateEvent:input_type -> calendar.UpdateEventReq
	3,  // 8: calendar.Calendar.DeleteEvent:input_type -> calendar.DeleteEventReq
	4,  // 9: calendar.Calendar.GetEventsDay:input_type -> calendar.GetEventsReq
	4,  // 10: calendar.Calendar.GetEventsWeek:input_type -> calendar.GetEventsReq
	4,  // 11: calendar.Calendar.GetEventsMonth:input_type -> calendar.GetEventsReq
	7,  // 12: calendar.Calendar.CreateEvent:output_type -> google.protobuf.Empty
	7,  // 13: calendar.Calendar.UpdateEvent:output_type -> google.protobuf.Empty
	7,  // 14: calendar.Calendar.DeleteEvent:output_type -> google.protobuf.Empty
	5,  // 15: calendar.Calendar.GetEventsDay:output_type -> calendar.GetEventsResp
	5,  // 16: calendar.Calendar.GetEventsWeek:output_type -> calendar.GetEventsResp
	5,  // 17: calendar.Calendar.GetEventsMonth:output_type -> calendar.GetEventsResp
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_CalendarService_proto_init() }
func file_CalendarService_proto_init() {
	if File_CalendarService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_CalendarService_proto_rawDesc), len(file_CalendarService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_CalendarService_proto_goTypes,
		DependencyIndexes: file_CalendarService_proto_depIdxs,
		MessageInfos:      file_CalendarService_proto_msgTypes,
	}.Build()
	File_CalendarService_proto = out.File
	file_CalendarService_proto_goTypes = nil
	file_CalendarService_proto_depIdxs = nil
}
